[[ -f ~/.zsh-snap/znap.zsh ]] ||
    git clone --depth 1 -- \
        https://github.com/marlonrichert/zsh-snap.git ~/.zsh-snap

source ~/.zsh-snap/znap.zsh

znap source zsh-users/zsh-syntax-highlighting
znap source zsh-users/zsh-autosuggestions
znap source zsh-users/zsh-completions
znap prompt sindresorhus/pure
source ~/dotfiles/zsh/bundler.plugin.zsh

alias l='ls -lGh'
alias ll='l -a'
alias g=git
alias ga='git add'
alias v=nvim
alias vim=nvim
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias iplocal="ipconfig getifaddr en0"
alias be="bundle exec"
alias mysql="mysql -u root"
alias psg="ps aux | grep"
alias rake="noglob bundled_rake"
alias rgc="rg --glob='!test' --glob='!spec' --glob='!*.test.tsx' --glob='!*test.ts'"
alias rgt="rg --glob='*_test.rb'"
alias fork="PINENTRY_USER_DATA='' fork"
alias sc='systemctl'
alias jc='journalctl'
alias jj='journalctl -f -u'

export GPG_TTY=$(tty)
export PINENTRY_USER_DATA="USE_CURSES=1"

# Keybindings stolen from oh-my-zsh
WORDCHARS=''
bindkey -e
bindkey "^[[H" beginning-of-line                    # [Home] - Go to beginning of line
bindkey "^[[F" end-of-line                          # [End] - Go to end of line
bindkey "${terminfo[kcbt]}" reverse-menu-complete   # [Shift-Tab] - move through the completion menu backwards
bindkey "${terminfo[kdch1]}" delete-char            # [Delete] - delete forward

# History file configuration
[ -z "$HISTFILE" ] && HISTFILE="$HOME/.zsh_history"
HISTSIZE=50000
SAVEHIST=10000

## History command configuration
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_ignore_all_dups   # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt inc_append_history     # add commands to HISTFILE in order of execution
setopt share_history          # share command history data
setopt nobanghist             # disable ! trying to reference histort everywhere

[ -f /opt/dev/dev.sh ] && source /opt/dev/dev.sh
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

gco() {
  local tags branches target
  branches=$(
    git --no-pager branch \
      --format="%(if)%(HEAD)%(then)%(else)%(if:equals=HEAD)%(refname:strip=3)%(then)%(else)%1B[0;34;1mbranch%09%1B[m%(refname:short)%(end)%(end)" \
    | sed '/^$/d') || return
  target=$(
    (echo "$branches") |
    fzf --no-hscroll --no-multi -n 2 \
        --ansi) || return
  git checkout $(awk '{print $2}' <<<"$target" )
}

alias git-clean='git branch --merged | egrep -v "(^\*|master|dev|main)" | xargs git branch -d'

FZF_DEFAULT_OPTS="-i"
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[[ -x /opt/homebrew/bin/brew ]] && eval $(/opt/homebrew/bin/brew shellenv)

bundlecd() {
  local path=$(bundle info --path $1)

  if [ -e $path ]; then
    cd $path
  fi
}

[[ -f /opt/dev/sh/chruby/chruby.sh ]] && { type chruby >/dev/null 2>&1 || chruby () { source /opt/dev/sh/chruby/chruby.sh; chruby "$@"; } }
