# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
		${4:// body...}
	};
# Function
snippet fun
	function ${1:function_name} (${2:argument}) {
		${3:// body...}
	}
# Anonymous Function
snippet f
	function(${1}) {${2}};
# if
snippet if
	if (${1:true}) {${2}}
# if ... else
snippet ife
	if (${1:true}) {${2}}
	else{${3}}
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1:expression}) {
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for (var ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {
		${4:$1[$2]}
	};
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	};
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10};
# Get Elements
snippet get
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
snippet gett
	getElementBy${1:Id}('${2}')${3}
snippet oc1
	var http = require('http');

	http.createServer(function(req, res){
		res.writeHead(200);
		res.end('Hello, OpenCode');
	}).listen(1234);
snippet oc2
	// Static file serving
	if(req.url == '/')    var file = '/index.html';
	else                  var file = req.url;

	console.log('Serving file ' + req.url);
snippet oc3
	if(err){
		res.writeHead(500);
		res.end(err + "\n");
		return;
	}
snippet oc4
	var channel = '/chat';
	
	var name = prompt('Ton nom?', 'D Natural');
snippet oc5
	console.log(msg);
	$messages.append([
		'<p>',
			'<span class="name">'+ msg.name +'</span>',
			'<span class="time">'+ msg.time +'</span>',
			'<span class="text">'+ msg.text +'</span>',
		'</p>'
	].join(''));
	$messages.prop({scrollTop: $messages[0].scrollHeight});
snippet oc6
	$(function(){
		$messages = $('#messages');

		$('#speak').submit(function(e){
			e.preventDefault();
			var now = new Date();
			var $text_input = $(this).find('input[type=text]');
			var msg = {
				name: name,
				time: now.getHours() + ':' + now.getMinutes(),
				text: $text_input.val()
			};

			client.publish(channel, msg);
			$text_input.val('');

		});
	});
