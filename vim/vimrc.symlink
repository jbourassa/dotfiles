call plug#begin('~/.vim/plugged')

set rtp+=~/.fzf
Plug 'junegunn/fzf.vim'

Plug 'vim-scripts/bufkill.vim'
Plug 'mileszs/ack.vim', { 'on': 'Ack' }
" Buffer: delete when I'm confident
" Plug 'https://github.com/tmhedberg/matchit.git'
" Plug 'fholgado/minibufexpl.vim'

Plug 'bling/vim-bufferline'

Plug 'scrooloose/nerdtree', { 'on':  ['NERDTreeToggle', 'NERDTreeFind'] }
Plug 'scrooloose/nerdcommenter'
Plug 'fboender/bexec'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-endwise'
Plug 'Raimondi/delimitMate'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-abolish'
Plug 'mattn/emmet-vim'
Plug 'bronson/vim-visual-star-search'

Plug 'ervandew/supertab'

Plug 'w0rp/ale'
Plug 'pangloss/vim-javascript'
Plug 'vim-ruby/vim-ruby'
Plug 'mxw/vim-jsx'
Plug 'elixir-lang/vim-elixir'
Plug 'tpope/vim-markdown'
Plug 'tpope/vim-surround'

Plug 'tpope/vim-rails'
Plug 'tpope/vim-rake'
Plug 'tpope/vim-bundler'


Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'garbas/vim-snipmate'
Plug 'tomtom/tlib_vim'

Plug 'mustache/vim-mustache-handlebars'
Plug 'stephpy/vim-yaml'
Plug 'xenoterracide/html.vim'
Plug 'othree/javascript-libraries-syntax.vim'

Plug 'bling/vim-airline'
Plug 'chriskempson/base16-vim'

Plug 'editorconfig/editorconfig-vim'
call plug#end()

filetype plugin indent on

set shell=$SHELL\ -l
if has("gui_running")
  "Remove toolbar
  set guioptions-=T
  " Key for tab navigation
  nmap <silent> <C-Tab> :maca _cycleWindows:<CR>
  nmap <silent> <C-S-Tab> :maca _cycleWindowsBackwards:<CR>
  set balloondelay=100000 " Long balloon to avoir huge tooltip in ruby files
  set guioptions+=c
endif

" Color!!!!
set termguicolors
let base16colorspace=256
colorscheme base16-material-darker

" Tweak color scheme
function! s:base16_customize() abort
  hi Comment guifg=#6A6A6A
  highlight LineNr guibg=NONE
  " call Base16hi("Comment", "6A6A6A", "", "6A6A6A", "", "", "")
endfunction

augroup on_change_colorschema
  autocmd!
  autocmd ColorScheme * call s:base16_customize()
augroup END
syntax on


set nobackup
set noswapfile
set nojoinspaces

set number
set showmode
set tabstop=2 shiftwidth=2 softtabstop=2 et
set hidden

set wildmenu
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc,*.class,.svn,vendor/gems/*,.DS_Store,*.pyc,*/tmp/*,*/dist/*,

set cursorline

set list listchars=tab:»\ ,trail:·

filetype on
filetype plugin indent on
set backspace=2
set vb "visual bell
runtime macros/matchit.vim

set encoding=utf-8
set fileencoding=utf-8
set hlsearch
set laststatus=2
set history=100
set scrolloff=5
set incsearch
set ignorecase
set infercase " Gives case sensitive autocompletion
set smartcase
set gdefault " Always search/replace globally
set nostartofline

cnoreabbrev W w
cnoreabbrev F NERDTreeFind

" Thorfile, Rakefile, Vagrantfile and Gemfile Guardfile are Ruby
au BufRead,BufNewFile {Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru,Guardfile}    set ft=ruby

"Key bidings
let mapleader = ","
let g:mapleader = ","
nmap <silent> <c-n> :NERDTreeToggle<CR>
noremap <silent> <Space> :silent noh<Bar>echo<CR>
set pastetoggle=<F3>
"Moving around windows (taken from Derek Wyatt)
noremap <silent> ,h :wincmd h<cr>
noremap <silent> ,j :wincmd j<cr>
noremap <silent> ,k :wincmd k<cr>
noremap <silent> ,l :wincmd l<cr>

nmap <Leader>cp :let @*=expand("%")<CR>
nmap <Leader>cP :let @*=expand("%:p")<CR>

map <Leader>a :Ack<Space>

" Tab navigation
noremap <silent> <D-A-Left> :tabp<CR>
noremap <silent> <D-A-Right> :tabn<CR>

" Indent with tab in visual mode
vnoremap <Tab> >gv|
vnoremap <S-Tab> <gv

"Faster prev-buffer
nnoremap <leader><leader> <c-^>
nnoremap <silent> <leader>w :w<CR>

"bind BExec plugin to <leader>r (r -> run)
nmap <silent> <leader>r :call bexec#Normal()<CR>
vmap <silent> <leader>r :call bexec#Visual()<CR>

"NERDTree
let NERDTreeIgnore = ['\.pyc$', '\.o$']

"fzf stuff
let $FZF_DEFAULT_COMMAND = 'ag -l -g ""'
nmap <Leader>t :Files<CR>
nmap <Leader>b :Buffers<CR>

"Unmap some unsued buffer command to use fzf buffers (<Leader>b)
autocmd VimEnter *  unmap <Leader>bundo
autocmd VimEnter *  unmap <Leader>bw
autocmd VimEnter *  unmap <Leader>bb
autocmd VimEnter *  unmap <Leader>bf
autocmd VimEnter *  unmap <Leader>bun
autocmd VimEnter *  unmap <Leader>bd
autocmd VimEnter *  unmap <Leader>ba
autocmd VimEnter *  unmap <Leader>bx
autocmd VimEnter *  unmap <Leader>bc
autocmd VimEnter *  unmap <Leader>bl
imap jj <Esc>

set exrc    " enable per-directory .vimrc files
set secure  " disable unsafe commands in local .vimrc files"

" Use `ag` instead of `ack` for searching
let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'

" Airline
set guifont=Droid\ Sans\ Mono\ for\ Powerline:h16
let g:airline_powerline_fonts = 1
set noshowmode " Hide --INSERT-- since it's in airline
let g:airline#extensions#bufferline#enabled = 0

let g:ale_linters = {'javascript': ['jshint'], 'ruby': ['ruby', 'rubocop']}

" Enable omni completion.
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
autocmd FileType ruby setlocal omnifunc=rubycomplete#Complete
autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
